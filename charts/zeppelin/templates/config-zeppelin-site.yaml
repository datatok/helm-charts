kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "zeppelin.fullname" . }}-site-config
  labels:
    {{- include "zeppelin.labels" . | nindent 4 }}
data:
  zeppelin-site.xml: |-
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <!--
       Licensed to the Apache Software Foundation (ASF) under one or more
       contributor license agreements.  See the NOTICE file distributed with
       this work for additional information regarding copyright ownership.
       The ASF licenses this file to You under the Apache License, Version 2.0
       (the "License"); you may not use this file except in compliance with
       the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
    -->

    <configuration>

    {{- range $k,$v := .Values.zeppelin.config }}
    <property>
      <name>{{$k}}</name>
      <value>{{$v}}</value>
    </property>
    {{- end }}
    <property>
      <name>zeppelin.server.rpc.hostName</name>
      <value>{{ template "zeppelin.fullname" . }}</value>
      <description>RPC server address</description>
    </property>

    <property>
      <name>zeppelin.server.rpc.portRange</name>
      <value>{{ .Values.service.rpcPort }}:{{ .Values.service.rpcPort }}</value>
      <description>RPC Server address port</description>
    </property>


    <property>
      <name>zeppelin.server.port</name>
      <value>{{ .Values.service.port }}</value>
      <description>Server port.</description>
    </property>

    <property>
      <name>zeppelin.server.ssl.port</name>
      <value>8443</value>
      <description>Server ssl port. (used when ssl property is set to true)</description>
    </property>

    <property>
      <name>zeppelin.server.context.path</name>
      <value>{{- if .Values.ingress.enabled }}{{ .Values.ingress.baseUrl }}{{- end }}</value>
      <description>Context Path of the Web Application</description>
    </property>

    <property>
      <name>zeppelin.war.tempdir</name>
      <value>webapps</value>
      <description>Location of jetty temporary directory</description>
    </property>

    {{- if eq .Values.notebookStorage.type "s3" }}
    <property>
      <name>zeppelin.notebook.s3.bucket</name>
      <value>{{ .Values.notebookStorage.path }}</value>
      <description>S3 bucket path</description>
    </property>
    <property>
      <name>zeppelin.notebook.storage</name>
      <value>org.apache.zeppelin.notebook.repo.S3NotebookRepo</value>
      <description>versioned notebook persistence layer implementation</description>
    </property>
    {{- else if eq .Values.notebookStorage.type "gs" }}
    <property>
      <name>zeppelin.notebook.gcs.dir</name>
      <value>gs://{{ .Values.notebookStorage.path }}</value>
      <description>GCS bucket path</description>
    </property>
    <property>
      <name>zeppelin.notebook.storage</name>
      <value>org.apache.zeppelin.notebook.repo.GCSNotebookRepo</value>
      <description>versioned notebook persistence layer implementation</description>
    </property>
    {{- else if eq .Values.notebookStorage.type "azure" }}
    <property>
      <name>zeppelin.notebook.azure.share</name>
      <value>{{ .Values.notebookStorage.path }}</value>
      <description>Azure FileShare name</description>
    </property>
    <property>
      <name>zeppelin.notebook.storage</name>
      <value>org.apache.zeppelin.notebook.repo.AzureNotebookRepo</value>
      <description>versioned notebook persistence layer implementation</description>
    </property>
    <property>
      <name>zeppelin.notebook.azure.connectionString</name>
      <value>DefaultEndpointsProtocol=https;AccountName={{ .Values.azureStorageAccountName }};AccountKey={{ .Values.azureStorageAccessKey }}</value>
      <description>Connection string to Azure File</description>
    </property>
    {{- else }}
    <property>
      <name>zeppelin.notebook.storage</name>
      <value>org.apache.zeppelin.notebook.repo.GitNotebookRepo</value>
      <description>versioned notebook persistence layer implementation</description>
    </property>
    {{- end }}

    <property>
      <name>zeppelin.notebook.one.way.sync</name>
      <value>false</value>
      <description>If there are multiple notebook storages, should we treat the first one as the only source of truth?</description>
    </property>

    <property>
      <name>zeppelin.interpreter.dir</name>
      <value>interpreter</value>
      <description>Interpreter implementation base directory</description>
    </property>

    <property>
      <name>zeppelin.interpreter.localRepo</name>
      <value>local-repo</value>
      <description>Local repository for interpreter's additional dependency loading</description>
    </property>

    <property>
      <name>zeppelin.interpreter.dep.mvnRepo</name>
      <value>http://repo1.maven.org/maven2/</value>
      <description>Remote principal repository for interpreter's additional dependency loading</description>
    </property>

    <property>
      <name>zeppelin.dep.localrepo</name>
      <value>local-repo</value>
      <description>Local repository for dependency loader</description>
    </property>

    <property>
      <name>zeppelin.helium.node.installer.url</name>
      <value>https://nodejs.org/dist/</value>
      <description>Remote Node installer url for Helium dependency loader</description>
    </property>

    <property>
      <name>zeppelin.helium.npm.installer.url</name>
      <value>http://registry.npmjs.org/</value>
      <description>Remote Npm installer url for Helium dependency loader</description>
    </property>

    <property>
      <name>zeppelin.helium.yarnpkg.installer.url</name>
      <value>https://github.com/yarnpkg/yarn/releases/download/</value>
      <description>Remote Yarn package installer url for Helium dependency loader</description>
    </property>

    <property>
      <name>zeppelin.interpreters</name>
      <value>org.apache.zeppelin.spark.SparkInterpreter,org.apache.zeppelin.spark.PySparkInterpreter,org.apache.zeppelin.spark.SparkSqlInterpreter,org.apache.zeppelin.spark.DepInterpreter,org.apache.zeppelin.markdown.Markdown,org.apache.zeppelin.shell.ShellInterpreter,org.apache.zeppelin.file.HDFSFileInterpreter,org.apache.zeppelin.python.PythonInterpreter,org.apache.zeppelin.python.PythonInterpreterPandasSql,org.apache.zeppelin.python.PythonCondaInterpreter,org.apache.zeppelin.python.PythonDockerInterpreter,org.apache.zeppelin.jdbc.JDBCInterpreter,org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter</value>
      <description>Comma separated interpreter configurations. First interpreter become a default</description>
    </property>

    <property>
      <name>zeppelin.interpreter.group.order</name>
      <value>spark,md,angular,sh,file,psql,python,elasticsearch,jdbc</value>
      <description></description>
    </property>

    <property>
      <name>zeppelin.interpreter.connect.timeout</name>
      <value>{{ .Values.interpreterConnectTimeout }}</value>
      <description>Interpreter process connect timeout in msec.</description>
    </property>

    <property>
      <name>zeppelin.ssl</name>
      <value>false</value>
      <description>Should SSL be used by the servers?</description>
    </property>

    <property>
      <name>zeppelin.ssl.client.auth</name>
      <value>false</value>
      <description>Should client authentication be used for SSL connections?</description>
    </property>

    <property>
      <name>zeppelin.ssl.keystore.path</name>
      <value>keystore</value>
      <description>Path to keystore relative to Zeppelin configuration directory</description>
    </property>

    <property>
      <name>zeppelin.ssl.keystore.type</name>
      <value>JKS</value>
      <description>The format of the given keystore (e.g. JKS or PKCS12)</description>
    </property>

    <property>
      <name>zeppelin.ssl.keystore.password</name>
      <value>change me</value>
      <description>Keystore password. Can be obfuscated by the Jetty Password tool</description>
    </property>

    <!--
    <property>
      <name>zeppelin.ssl.key.manager.password</name>
      <value>change me</value>
      <description>Key Manager password. Defaults to keystore password. Can be obfuscated.</description>
    </property>
    -->

    <property>
      <name>zeppelin.ssl.truststore.path</name>
      <value>truststore</value>
      <description>Path to truststore relative to Zeppelin configuration directory. Defaults to the keystore path</description>
    </property>

    <property>
      <name>zeppelin.ssl.truststore.type</name>
      <value>JKS</value>
      <description>The format of the given truststore (e.g. JKS or PKCS12). Defaults to the same type as the keystore type</description>
    </property>

    <!--
    <property>
      <name>zeppelin.ssl.truststore.password</name>
      <value>change me</value>
      <description>Truststore password. Can be obfuscated by the Jetty Password tool. Defaults to the keystore password</description>
    </property>
    -->

    <property>
      <name>zeppelin.server.allowed.origins</name>
      <value>*</value>
      <description>Allowed sources for REST and WebSocket requests (i.e. http://onehost:8080,http://otherhost.com). If you leave * you are vulnerable to https://issues.apache.org/jira/browse/ZEPPELIN-173</description>
    </property>

    <property>
      <name>zeppelin.anonymous.allowed</name>
      <value>true</value>
      <description>Anonymous user allowed by default</description>
    </property>

    <property>
      <name>zeppelin.notebook.default.owner.username</name>
      <value></value>
      <description>Set owner role by default</description>
    </property>

    <property>
      <name>zeppelin.notebook.public</name>
      <value>true</value>
      <description>Make notebook public by default when created, private otherwise</description>
    </property>

    <property>
      <name>zeppelin.websocket.max.text.message.size</name>
      <value>1024000</value>
      <description>Size in characters of the maximum text message to be received by websocket. Defaults to 1024000</description>
    </property>

    <property>
      <name>zeppelin.server.default.dir.allowed</name>
      <value>false</value>
      <description>Enable directory listings on server.</description>
    </property>

    <property>
      <name>zeppelin.interpreter.lifecyclemanager.class</name>
      <value>org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManager</value>
      <description>LifecycleManager class for managing the lifecycle of interpreters, by default interpreter will
      be closed after timeout</description>
    </property>

    <property>
      <name>zeppelin.interpreter.lifecyclemanager.timeout.checkinterval</name>
      <value>60000</value>
      <description>Milliseconds of the interval to checking whether interpreter is time out</description>
    </property>

    <property>
      <name>zeppelin.interpreter.lifecyclemanager.timeout.threshold</name>
      <value>3600000</value>
      <description>Milliseconds of the interpreter timeout threshold, by default it is 1 hour</description>
    </property>

    <!--
    <property>
        <name>zeppelin.server.jetty.name</name>
        <value>Jetty(7.6.0.v20120127)</value>
        <description>Hardcoding Application Server name to Prevent Fingerprinting</description>
    </property>
    -->

    <!--
    <property>
        <name>zeppelin.server.jetty.request.header.size</name>
        <value>8192</value>
        <description>Http Request Header Size Limit (to prevent HTTP 413)</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.server.xframe.options</name>
      <value>SAMEORIGIN</value>
      <description>The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a frame/iframe/object.</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.server.strict.transport</name>
      <value>max-age=631138519</value>
      <description>The HTTP Strict-Transport-Security response header is a security feature that lets a web site tell browsers that it should only be communicated with using HTTPS, instead of using HTTP. Enable this when Zeppelin is running on HTTPS. Value is in Seconds, the default value is equivalent to 20 years.</description>
    </property>
    -->
    <!--

    <property>
      <name>zeppelin.server.xxss.protection</name>
      <value>1</value>
      <description>The HTTP X-XSS-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages from loading when they detect reflected cross-site scripting (XSS) attacks. When value is set to 1 and a cross-site scripting attack is detected, the browser will sanitize the page (remove the unsafe parts).</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.interpreter.callback.portRange</name>
      <value>10000:10010</value>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.recovery.storage.class</name>
      <value>org.apache.zeppelin.interpreter.recovery.FileSystemRecoveryStorage</value>
      <description>ReoveryStorage implementation</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.recovery.dir</name>
      <value>recovery</value>
      <description>Location where recovery metadata is stored</description>
    </property>
    -->


    </configuration>
