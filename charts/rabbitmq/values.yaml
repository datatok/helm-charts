replicaCount: 3

image:
  repository: rabbitmq
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  annotations: {}
  #  service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0

ingress:
  enabled: false
  podSelector: {}
  #  namespaceSelector:
  #    matchLabels:
  #      name: nginx-ingress
  className: ""
  annotations: {}
    # nginx.ingress.kubernetes.io/affinity: cookie
    # nginx.ingress.kubernetes.io/affinity-mode: persistent
    # nginx.ingress.kubernetes.io/session-cookie-name: infra-ingress-session
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

networkPolicy:
  # -- enable network policy
  enabled: false
  # -- specify AMQP port selector (full open else)
  clientPodSelector: {}
  # -- add extra NP egress rules
  extraEgressRules: []
  # -- add extra NP ingress rules
  extraIngressRules: []

resources:
  requests:
    cpu: 100m
    memory: 1Gi
  limits:
    cpu: 100m
    memory: 1Gi

persistence:
  enabled: false
  storageClassName: fast
  storage: 20Gi

rabbitmq:
  additionalConfig: ""
  advancedConfig: ""
  additionalPlugins: {}

  vhosts:
  - test

  queues:
  - name: events
    spec:
      durable: true

  exchanges:
  - name: fanout
    spec:
      type: fanout
      autoDelete: false
      durable: true

  bindings:
  - name: events
    spec:
      source: fanout
      destination: events
      destinationType: queue

  permissions:
  - name: user1
    spec:
      user: "user1"
      permissions:
        write: ".*"
        configure: ".*"
        read: ".*"

  users:
  - name: user1
    spec:
      tags: ["monitoring"]
    secret: toto

operator:
  namespace: rabbitmq-system

cluster:
  annotations: {}
  override: {}
  extraSpec: {}
